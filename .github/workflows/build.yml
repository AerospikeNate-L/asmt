name: Build ASMT

on:
  push:
    branches: [ OPS-5275 ]
  pull_request:
    branches: [ OPS-5275 ]
        
jobs:
  buils_atl:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: [ 'centos:7', 'centos:8', 'debian:8', 'debian:9', 'debian:10' ]
    container:
      image: ${{ matrix.container }}
      options: "--entrypoint /bin/bash"
    steps:
    - name: Install Dependencies (centos:7)
      run: |
        yum install -y dnf-plugins-core
        yum-config-manager --enable powertools
        yum install -y make gcc zlib-devel zlib-static git rpm-build
      if: matrix.container == 'centos:7'
    - name: Install Dependencies (centos:8)
      run: |
        yum install -y dnf-plugins-core
        yum config-manager --set-enable powertools
        yum install -y make gcc zlib-devel zlib-static git rpm-build
      if: matrix.container == 'centos:8'
    - name: Install Dependencies (Debian)
      run: |
        apt-get -y update
        apt-get -y install make gcc libc6-dev zlib1g-dev git build-essential
      if: |
        matrix.container == 'debian:8' || matrix.container == 'debian:9' || matrix.container == 'debian:10'
    - name: Clone Source
      run: git clone --branch OPS-5275 https://github.com/aerospike/asmt.git
    - name: buils asmt (centos)
      working-directory: ./asmt
      if: matrix.container == 'centos:7' || matrix.container == 'centos:8'
      run: |
        echo "REV=$(make -f pkg/Makefile.deb print-REV)" >> $GITHUB_ENV
        echo "OS=$(make -f pkg/Makefile.deb print-OS)" >> $GITHUB_ENV
        echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
        make asmt rpm
    - name: build asmt (debian)
      working-directory: ./asmt
      if: |
        matrix.container == 'debian:8' || matrix.container == 'debian:9' || matrix.container == 'debian:10' 
      run: |
        echo "REV=$(make -f pkg/Makefile.deb print-REV)" >> $GITHUB_ENV
        echo "OS=$(make -f pkg/Makefile.deb print-OS)" >> $GITHUB_ENV
        echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
        make asmt deb      
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2.2.4
      with:
        name: asmt-${{ env.REV }}-${{ env.OS }}-${{ env.GITHUB_SHA_SHORT }}
        path: /__w/asmt/asmt/asmt/target/packages/asmt-*
        if-no-files-found: error
  build:
    strategy:
      matrix:
        os: [ 'ubuntu-20.04', 'ubuntu-18.04' ]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Install Dependencies (Ubuntu-latest)
      run: sudo apt-get install make gcc libc6-dev zlib1g-dev
      if: matrix.os == 'ubuntu-20.04'
    - name: Install Dependencies (Ubuntu-latest)
      run: sudo apt-get install make gcc libc6-dev zlib1g-dev
      if: matrix.os == 'ubuntu-18.04'
    - name: Get Sources
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Checkout ACT
      uses: actions/checkout@v2
      with:
        repository: citrusleaf/qe-docker
        token: ${{ secrets.ASMT_PAT }}
        ref: master
        path: qe-docker
    - name: Set env
      run: |
        echo "REV=$(make -f pkg/Makefile.deb print-REV)" >> $GITHUB_ENV
        echo "OS=$(make -f pkg/Makefile.deb print-OS)" >> $GITHUB_ENV
        echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
        ls -la
    - name: build
      run: make
    - name: Upload Artifact
      uses: actions/upload-artifact@v2.2.4
      with: 
        name: asmt-${{ env.REV }}-${{ env.OS }}-${{ env.GITHUB_SHA_SHORT }}
        path: target/packages
        if-no-files-found: error
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.10
    - name: Deploy to sandbox via rsync
      uses: trendyminds/github-actions-rsync@master
      with:
        RSYNC_OPTIONS: -avzr --delete --exclude node_modules --exclude '.git*'
        RSYNC_TARGET: /home/pvinh/asmt
        RSYNC_SOURCE: target/packages
      env:
        SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
        SSH_USERNAME: ${{secrets.SSH_USERNAME}}
        SSH_HOSTNAME: ${{secrets.SSH_HOSTNAME}}
